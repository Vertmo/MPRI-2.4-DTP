--- 04-generic/Desc.student	2019-02-22 10:19:53.937192789 +0100
+++ 04-generic/Desc.lagda.rst.orig	2019-02-22 10:17:38.997319391 +0100
@@ -1004,8 +1004,7 @@
 which is interpreted as-is in the monoid of endofunctor on ``Set``::
 
     Hyper : hyper → Set → Set
-    Hyper [] A = Id A
-    Hyper (F ∷ Fs) A = Seq F (Hyper Fs) A
+    Hyper Fs A = {!!}
 
 that is (but this would not play nice with unification):
 
@@ -1291,8 +1290,8 @@
 
     open import Relation.Binary.PropositionalEquality hiding (subst)
 
-    infixr 50 _`×_ _`×'_
-    infixr 30 _`+_ _`+'_
+    -- infixr 50 _`×_ _`×'_
+    -- infixr 30 _`+_ _`+'_
 
 In this second part, we apply a type-theoretic concept, a *universe*,
 to manipulate some structure of interest. Here, we shall look at
@@ -1331,22 +1330,11 @@
 under those operations::
 
     data Desc : Set₁ where
-      `X   : Desc
-      `K   : Set → Desc
-      _`×_ : (D₁ D₂ : Desc) → Desc
-      _`+_ : (D₁ D₂ : Desc) → Desc
-      `Σ   : (S : Set)(D : S → Desc) → Desc
-      `Π   : (S : Set)(D : S → Desc) → Desc
 
 The *interpretation* gives the desired semantics::
 
     ⟦_⟧ : Desc → Set → Set
-    ⟦ `X ⟧ X       = X
-    ⟦ `K S ⟧ X     = S
-    ⟦ D₁ `× D₂ ⟧ X = ⟦ D₁ ⟧ X × ⟦ D₂ ⟧ X
-    ⟦ D₁ `+ D₂ ⟧ X = ⟦ D₁ ⟧ X ⊎ ⟦ D₂ ⟧ X
-    ⟦ `Σ S T ⟧ X   = Σ[ s ∈ S ] ⟦ T s ⟧ X
-    ⟦ `Π S T ⟧ X   = (s : S) → ⟦ T s ⟧ X
+    ⟦ D ⟧ X       = ?
 
 ..
   ::
